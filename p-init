#!/bin/bash
# needs proper alias p to our new perl
if [ -n "$1" ]; then
    echo "alias p=$1" > ~/.alias-perl
    p=$1
fi
. ~/.alias-perl
cat ~/.alias-perl

AUTOMATED_TESTING=1
PERL_MM_USE_DEFAULT=1
cpan="$p -S cpan"
exp=~/.cpan/CPAN/nosqlite.pm
if [ -e $exp ]; then
  jpan="$cpan -j $exp"
else
  jpan="$cpan"
fi
if [ $(basename $0) = "j-init" ]; then
  cpan=$jpan
fi

function docmd {
  echo $*
  $*
}

echo '# bootstrapping CPAN::SQLite'
# if all the deps would be correct it would be a better world
docmd $jpan YAML DBI DBD::SQLite File::Which CPAN::SQLite
# now we should have a working CPAN::SQLite and faster startup
# but no concurrent usage. use a 2nd p-init as j-init to avoid CPAN::SQLite

echo '# bootstrapping Bundle::CPANReporter2'
docmd $cpan Params::Util Bundle::CPANReporter2

docmd $cpan B::Flags Opcodes Math::Round Params::Classify
if test -f ~/Perl/B-C/t/top100; then
  echo $cpan '$(cat ~/Perl/B-C/t/top100)'
  $cpan $(cat ~/Perl/B-C/t/top100)
fi
docmd $cpan Bundle::CygwinVendor YAML::XS

if [ -z "$2" ]; then
    echo "# more? (or Ctrl-C)"
    read more
else
    if [ $2 = "--less" ]; then
	exit
    fi
fi

# Class::MethodMaker rm SIGNATURE
docmd $cpan Text::CSV_XS Task::Cpanel::Core Cpanel::JSON::XS Inline DBIx::Class
# missing Kensho deps
docmd $cpan SQL::Abstract Module::Find Mouse MouseX::Types
# Task::Kensho assumes there is only one archlib per perl, do it manually
if test -f /usr/local/lib/perl5/site_perl/5.14.2/Task/Kensho.pm; then
  perl -lne '/=item L<(.+?)[\|>]/ and print $1' /usr/local/lib/perl5/site_perl/5.14.2/Task/Kensho.pm \
    | xargs $cpan
fi
